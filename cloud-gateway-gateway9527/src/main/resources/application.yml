server:
  port: 9527

spring:
  application:
    name: cloud-getway
  cloud:
    gateway:
      discovery:
        locator:
          enabled: true     #开启从注册中心动态创建路由的功能，利用服务名进行路由
      routes:
        - id: payment_routh           #路由的ID，没有固定规则但要求唯一，建议配合服务名
          #uri: http://localhost:8001  #匹配后提供服务的路由地址
          uri: lb://cloud-payment-service
          predicates:
            - Path=/payment/get/**    #断言,路径相匹配的进行路由
        - id: payment_routh2           #路由的ID，没有固定规则但要求唯一，建议配合服务名
          #uri: http://localhost:8001  #匹配后提供服务的路由地址
          uri: lb://cloud-payment-service
          predicates:
            - Path=/payment/lb/**    #断言,路径相匹配的进行路由
            #- After=2020-07-05T23:07:36.186+08:00[Asia/Shanghai]    #断言，需要在这个时间后访问
            #- Before=2020-07-05T22:07:36.186+08:00[Asia/Shanghai]    #断言，需要在这个时间前访问
            #- Between=2020-07-05T22:07:36.186+08:00[Asia/Shanghai],2020-07-05T22:07:36.186+08:00[Asia/Shanghai] #断言，需要在这个时间段内访问
            #- Cookie=username,zzyy #断言，需要请求中的Cookie包含username的key，并且该key的值要为zzyy
            #- Header=X-Request-Id, \d+   #断言，请求头要有X-Request-Id属性并且值为正整数
            # - Host=**.atguigu.com       #断言，请求头要有Host属性并且值为**.atguigu.com(**为通配符)
            # - Method=GET                #断言，要是GET请求
            - Query=username, \d+         #断言，需要带username查询参数且值为正整数

eureka:
  instance:
    hostname: cloud-gateway-service
  client:
    #表示是否将自己注册到EurekaServer，默认是true
    register-with-eureka: true
    #是否从EurekaServer抓取已有的注册信息，默认为true，单节点无所谓，集群必须设置为true才能配合ibbon使用负载均衡
    fetchRegistry: true
    service-url:
      defaultZone: http://eureka7001.com:7001/eureka/